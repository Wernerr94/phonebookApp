{"version":3,"file":"static/js/529.5f2ce659.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/FIlter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactForm_wrapper__-Umw-\",\"form\":\"ContactForm_form__dhl+T\"};","import React, { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsOperations from 'redux/contacts/contacts-operations';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(state => state.contacts.userContacts);\n  const dispatch = useDispatch();\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  const handleChange = e => {\n    if (e.target.name === 'name') {\n      setName(e.target.value);\n    }\n    if (e.target.name === 'number') {\n      setNumber(e.target.value);\n    }\n  };\n  const submitHandler = e => {\n    e.preventDefault();\n    let newContact = contacts.find(item => item.name === name);\n    if (newContact) {\n      alert(`${name} is already in contacts.`);\n      return;\n    } else {\n      dispatch(contactsOperations.addContact({ name, number }));\n      dispatch(contactsOperations.getAllContacts());\n    }\n    reset();\n  };\n  return (\n    <div className={css.wrapper}>\n      <h2>Add new Contact</h2>\n\n      <form onSubmit={submitHandler} className={css.form}>\n        <label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Name\"\n            onChange={handleChange}\n            value={name}\n          />\n        </label>\n        <label>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Number\"\n            onChange={handleChange}\n            value={number}\n          />\n        </label>\n        <button type=\"submit\" className={css.submit}>\n          Add\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport './Filter.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilterValue } from '../../redux/contacts/contacts-operations';\n\nexport default function Filter() {\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n  const handleChange = e => {\n    const target = e.target;\n    dispatch(getFilterValue(target.value));\n  };\n\n  return (\n    <div className=\"filterWrapper\">\n      <h3>Find number by name</h3>\n      <input type=\"text\" value={filter} onChange={handleChange} />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactList_container__hYHc3\",\"contactsList\":\"ContactList_contactsList__7leRd\",\"contact\":\"ContactList_contact__0STHS\"};","import React, { useEffect } from 'react';\nimport css from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsOperations from 'redux/contacts/contacts-operations';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.contacts.filter);\n  const contacts = useSelector(state => state.contacts.userContacts);\n  useEffect(() => {\n    dispatch(contactsOperations.getAllContacts());\n  }, [dispatch]);\n\n  const filterContacts = () => {\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  const contactsArr = filterContacts();\n  const handleRemove = id => {\n    dispatch(contactsOperations.deleteContact(id));\n  };\n  return (\n    <div className={css.container}>\n      <ul className={css.contactsList}>\n        {contactsArr?.length > 0 &&\n          contactsArr.map(contact => {\n            return (\n              <li key={contact.id} className={css.contact}>\n                {contact.name}: {contact.number}\n                <button\n                  className={css.deleteButton}\n                  onClick={() => handleRemove(contact.id)}\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n","import React from 'react';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/FIlter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nexport default function Contacts() {\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","state","userContacts","dispatch","useDispatch","handleChange","e","target","value","className","css","onSubmit","preventDefault","find","item","alert","contactsOperations","type","pattern","title","required","placeholder","onChange","Filter","filter","getFilterValue","ContactList","useEffect","contactsArr","contact","toLowerCase","includes","length","map","onClick","id","Contacts"],"sourceRoot":""}