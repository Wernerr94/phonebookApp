{"version":3,"file":"static/js/639.8d2072e1.chunk.js","mappings":"oQAKaA,EAAUC,EAAAA,GAAAA,IAAH,4DAIPC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,mYAERG,EAAAA,EAAAA,GAAQ,MACXA,EAAAA,EAAAA,GAAQ,MAEJA,EAAAA,EAAAA,GAAQ,KAKLA,EAAAA,EAAAA,GAAQ,KACXA,EAAAA,EAAAA,GAAQ,KAAUA,EAAAA,EAAAA,GAAQ,KAAUA,EAAAA,EAAAA,GAAQ,KAGvCA,EAAAA,EAAAA,GAAQ,KAKhBC,GAAQJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,gdACHG,EAAAA,EAAAA,IAAQG,EAAAA,EAAAA,GAAK,QACTH,EAAAA,EAAAA,GAAQ,IAEZA,EAAAA,EAAAA,GAAQ,MAGJA,EAAAA,EAAAA,GAAQ,IAGVA,EAAAA,EAAAA,IAAQG,EAAAA,EAAAA,GAAK,QAUjBC,GAAQP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,4HAETG,EAAAA,EAAAA,GAAQ,KACFA,EAAAA,EAAAA,IAAQG,EAAAA,EAAAA,GAAK,QAKfG,EAAST,EAAAA,GAAAA,OAAH,8oB,6BCjDfU,EAAeC,EAAAA,KAAaC,MAAM,CACpCC,MAAOF,EAAAA,KAAaE,QAAQC,WAC5BC,SAAUJ,EAAAA,KAAaK,IAAI,GAAGC,IAAI,IAAIH,aAElCI,EAAe,CACnBL,MAAO,GACPE,SAAU,IAEG,SAASI,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAKjB,OACE,SAACtB,EAAD,WACE,SAAC,KAAD,CACEuB,cAAeJ,EACfK,iBAAkBb,EAClBc,SATN,SAAsBC,EAAtB,GAA8C,IAAdC,EAAa,EAAbA,UAC9BN,EAASO,EAAAA,EAAAA,MAAqBF,IAC9BC,GACD,EAGG,UAKE,UAACzB,EAAD,YACE,mCACA,8BACE,SAACG,EAAD,CACEwB,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,YAAY,WAEd,SAACxB,EAAD,CAAOsB,KAAK,QAAQG,UAAU,YAEhC,8BACE,SAAC5B,EAAD,CACEwB,KAAK,WACLC,KAAK,WACLC,aAAa,MACbC,YAAY,cAEd,SAACxB,EAAD,CAAOsB,KAAK,WAAWG,UAAU,YAEnC,SAACvB,EAAD,CAAQmB,KAAK,SAAb,yBAKT,C,uDCrDM,IAAMtB,EAAO,SAAA2B,GAKlB,MAAY,OAARA,EAJK,GAOG,OAARA,EANK,GASG,OAARA,EARK,GAWG,OAARA,EAVK,QAUT,CAGD,C","sources":["pages/Login/Login.styled.js","pages/Login/Login.jsx","utils/sizes.js"],"sourcesContent":["import styled from 'styled-components';\nimport { pxToRem } from 'utils/calcRem';\nimport { size } from 'utils/sizes';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Wrapper = styled.div`\n  /* background-color: #91c7b1; */\n`;\n\nexport const CustomForm = styled(Form)`\n  background-color: #fff;\n  max-width: ${pxToRem(300)}rem;\n  height: ${pxToRem(300)}rem;\n  margin: auto;\n  margin-top: ${pxToRem(20)}rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: ${pxToRem(15)}rem;\n  box-shadow: ${pxToRem(20)}rem ${pxToRem(20)}rem ${pxToRem(50)}rem\n    rgba(0, 0, 0, 0.3);\n  & label {\n    margin-bottom: ${pxToRem(25)}rem;\n    position: relative;\n  }\n`;\n\nexport const Input = styled(Field)`\n  font-size: ${pxToRem(size('md'))}rem;\n  border-bottom: ${pxToRem(2)}rem solid rgba(233, 233, 233, 0.5);\n  background-color: rgba(233, 233, 233, 0.5);\n  max-width: ${pxToRem(200)}rem;\n  border: 0;\n  border-radius: 0;\n  border-bottom: ${pxToRem(1)}rem solid rgba(0, 0, 0, 0.1);\n\n  &::placeholder {\n    font-size: ${pxToRem(size('sm'))}rem;\n    font-style: italic;\n    font-weight: 200;\n  }\n  &:focus {\n    outline: 0;\n    border-radius: 0;\n    background-color: rgba(233, 233, 233, 0.5);\n  }\n`;\nexport const Error = styled(ErrorMessage)`\n  position: absolute;\n  top: ${pxToRem(30)}rem;\n  font-size: ${pxToRem(size('xs'))}rem;\n  font-style: italic;\n  color: #f03;\n`;\n\nexport const Button = styled.button`\n  box-shadow: inset 0px 1px 0px 0px #dcecfb;\n  background: linear-gradient(to bottom, #b6ccfe 5%, #80b5ea 100%);\n  background-color: #b6ccfe;\n  border-radius: 6px;\n  border: 1px solid #84bbf3;\n  display: inline-block;\n  height: 24px;\n  cursor: pointer;\n  color: #ffffff;\n  font-family: Arial;\n  font-size: 15px;\n  font-weight: bold;\n  line-height: 18px;\n  padding: 0 24px;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #528ecc;\n  &:hover {\n    background: linear-gradient(to bottom, #80b5ea 5%, #b6ccfe 100%);\n    background-color: #80b5ea;\n  }\n  &:active {\n    position: relative;\n    top: 1px;\n  }\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Input, CustomForm, Error, Wrapper, Button } from './Login.styled';\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../../redux/auth/auth-operations';\n\nlet signUpSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(4).max(16).required(),\n});\nconst initialState = {\n  email: '',\n  password: '',\n};\nexport default function Login() {\n  const dispatch = useDispatch();\n  function handleSubmit(values, { resetForm }) {\n    dispatch(authOperations.login(values));\n    resetForm();\n  }\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={initialState}\n        validationSchema={signUpSchema}\n        onSubmit={handleSubmit}\n      >\n        <CustomForm>\n          <h3>Login</h3>\n          <label>\n            <Input\n              type=\"text\"\n              name=\"email\"\n              autoComplete=\"off\"\n              placeholder=\"Email\"\n            />\n            <Error name=\"email\" component=\"div\" />\n          </label>\n          <label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              autoComplete=\"off\"\n              placeholder=\"Password\"\n            />\n            <Error name=\"password\" component=\"div\" />\n          </label>\n          <Button type=\"submit\">Login</Button>\n        </CustomForm>\n      </Formik>\n    </Wrapper>\n  );\n}\n","export const size = val => {\n  let xs = 12;\n  let sm = 16;\n  let md = 24;\n  let lg = 32;\n  if (val === 'xs') {\n    return xs;\n  }\n  if (val === 'sm') {\n    return sm;\n  }\n  if (val === 'md') {\n    return md;\n  }\n  if (val === 'lg') {\n    return lg;\n  }\n};\n"],"names":["Wrapper","styled","CustomForm","Form","pxToRem","Input","Field","size","Error","ErrorMessage","Button","signUpSchema","yup","shape","email","required","password","min","max","initialState","Login","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","authOperations","type","name","autoComplete","placeholder","component","val"],"sourceRoot":""}